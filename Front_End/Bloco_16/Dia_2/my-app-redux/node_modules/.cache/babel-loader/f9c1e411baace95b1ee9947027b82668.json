{"ast":null,"code":"var _jsxFileName = \"/home/beatriz/trybe-exercises/Front_End/Bloco_16/Dia_2/my-app-redux/src/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { submitForm } from './actions';\nimport { cleanForm } from './actions';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n    this.cleanForm = this.cleanForm.bind(this);\n    this.state = {\n      name: '',\n      email: '',\n      cpf: '',\n      adress: '',\n      city: ''\n    };\n  }\n\n  handleChange({\n    target\n  }) {\n    this.setState({\n      [target.name]: target.value\n    });\n  }\n\n  cleanForm() {\n    this.setState({\n      name: '',\n      email: '',\n      cpf: '',\n      adress: '',\n      city: ''\n    });\n  }\n\n  render() {\n    const {\n      name,\n      email,\n      cpf,\n      adress,\n      city\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: [\"Nome:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              maxlength: \"40\",\n              required: true,\n              value: name,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: [\"E-mail:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"email\",\n              maxlength: \"50\",\n              required: true,\n              value: email,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: [\"Cpf:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"cpf\",\n              maxlength: \"11\",\n              required: true,\n              value: cpf,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: [\"Endere\\xE7o:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"adress\",\n              maxlength: \"200\",\n              required: true,\n              value: adress,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: [\"Cidade:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"city\",\n              maxlength: \"28\",\n              required: true,\n              value: city,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: submitForm(this.state),\n          children: \"Submeter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: cleanForm,\n          children: \"Limpar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  submitForm: payload => dispatch(submitForm(payload)) // cleanForm: () => dispatch(cleanForm())\n\n});\n\nexport default connect(null, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/beatriz/trybe-exercises/Front_End/Bloco_16/Dia_2/my-app-redux/src/App.js"],"names":["React","connect","submitForm","cleanForm","App","Component","constructor","handleChange","bind","state","name","email","cpf","adress","city","target","setState","value","render","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { submitForm } from './actions';\nimport { cleanForm } from './actions';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = this.handleChange.bind(this);\n    this.cleanForm = this.cleanForm.bind(this);\n\n    this.state = {\n      name: '',\n      email: '',\n      cpf: '',\n      adress: '',\n      city: '',\n    }\n  }\n\n  handleChange({target}) {\n    this.setState({\n      [target.name]: target.value });\n  };\n\n  cleanForm() {\n    this.setState({\n      name: '',\n      email: '',\n      cpf: '',\n      adress: '',\n      city: '',\n    });\n  }\n\n  render() {\n    const { name, email, cpf, adress, city } = this.state;\n\n    return (\n      <div className=\"App\">\n        <form>\n          <fieldset>\n            <label htmlFor=\"name\">Nome:\n              <input type=\"text\" name='name' maxlength='40' required value={ name }\n                onChange={this.handleChange} />\n            </label>\n            <label htmlFor=\"name\">E-mail:\n              <input type=\"text\" name='email' maxlength='50' required value={ email }\n                onChange={this.handleChange} />\n            </label>\n            <label htmlFor=\"name\">Cpf:\n              <input type=\"text\" name='cpf' maxlength='11'required value={ cpf }\n                onChange={this.handleChange} />\n            </label>\n            <label htmlFor=\"name\">Endereço:\n              <input type=\"text\" name='adress' maxlength='200' required value={ adress }\n                onChange={this.handleChange} />\n            </label>\n            <label htmlFor=\"name\">Cidade:\n              <input type=\"text\" name='city' maxlength='28' required value={ city }\n                onChange={this.handleChange} />\n            </label>\n          </fieldset>\n          <button type=\"submit\" onClick={ submitForm(this.state) }>Submeter</button>\n          <button type=\"button\" onClick={ cleanForm }>Limpar</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  submitForm: (payload) => dispatch(submitForm(payload)),\n // cleanForm: () => dispatch(cleanForm())\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}